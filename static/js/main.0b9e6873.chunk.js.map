{"version":3,"sources":["add-user/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","listStyle","padding","spacing","margin","maxHeight","overflowY","border","borderRadius","justifyContent","color","chip","form","text","textAlign","marginTop","buttons","marginLeft","AddUser","classes","React","useState","chipData","setChipData","newPill","setNewPill","handleChange","event","target","value","handleSubmit","preventDefault","newKey","length","key","label","scrollContainer","useRef","useEffect","current","scrollTop","scrollHeight","checked","setChecked","Form","className","noValidate","autoComplete","onSubmit","TextField","id","placeholder","onChange","autoFocus","fullWidth","InputProps","startAdornment","FormControlLabel","control","Switch","Paper","paper","title","elevation","ref","map","data","icon","chipToDelete","Chip","onDelete","undefined","chips","filter","clsx","Button","variant","jss","setup","preset","flexGrow","palette","secondary","App","CssBaseline","Container","maxWidth","Grid","container","item","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b9e6873.chunk.js","sourcesContent":["import React from 'react'\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: theme.spacing(2, 0),\n    maxHeight: '120px',\n    overflowY: 'scroll',\n    border: 'solid 1px #d2d2d2',\n    borderRadius: '4px',\n\n    '&.empty': {\n      padding: theme.spacing(1.7),\n      display: 'grid',\n      justifyContent: 'center',\n      color: '#868686'\n    }\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  form: {\n    '& > *': {\n      padding: theme.spacing(0, 2)\n    },\n  },\n  text: {\n    textAlign: 'left',\n    padding: theme.spacing(0, 2),\n    '& + .MuiPaper-root': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  buttons: {\n    textAlign: 'center',\n    marginTop: theme.spacing(3),\n    padding: theme.spacing(2, 0),\n    '& button + button': {\n      marginLeft: theme.spacing(0.5)\n    }\n  },\n  'paper': {\n    padding: theme.spacing(2)\n  },\n  'title': {\n    padding: theme.spacing(0, 2),\n    textAlign: 'center'\n  }\n}));\n\nconst AddUser = () => {\n\n  const classes = useStyles();\n\n  const [chipData, setChipData] = React.useState([]);\n\n  const handleDelete = (chipToDelete) => () => {\n    setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\n  };\n\n  const [newPill, setNewPill] = React.useState('');\n  const handleChange = (event) => {\n    setNewPill(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newKey = chipData.length > 0 ? chipData[chipData.length - 1].key + 1 : 0;\n    setChipData([...chipData, {key: newKey, label: newPill}]);\n    setNewPill('');\n  }\n\n  const scrollContainer = React.useRef();\n  React.useEffect(() => {\n    if (!scrollContainer.current) return;\n    // Make sure, container is scrolled to bottom\n    scrollContainer.current.scrollTop = scrollContainer.current.scrollHeight;\n  }, [chipData]);\n\n  const [checked, setChecked] = React.useState(true);\n  const handleCheckedChange = (event) => setChecked(event.target.checked);\n\n  const Form = () => (\n    <form className={classes.form} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n      <TextField id=\"standard-basic\" placeholder=\"Enter a name or a group name\" value={newPill}\n                 onChange={handleChange} autoFocus={true} fullWidth={true}\n                 InputProps={{\n                   startAdornment: <SearchIcon/>,\n                 }}/>\n    </form>\n  )\n\n  return (\n    <>\n      <div>\n        <FormControlLabel\n          control={<Switch\n            checked={checked}\n            onChange={handleCheckedChange}\n          />}\n          label=\"Bottom\"\n        />\n      </div>\n      <Paper className={classes.paper}>\n        <h1 className={classes.title}>For review</h1>\n        <div className={classes.text}>\n          This workflow will be assigned automatically to all eligible people, or just offer\n          the workflow to selected users and groups.\n        </div>\n        {!checked && <Paper elevation={0}><Form/></Paper>}\n        {chipData.length > 0 && (\n          <ul className={classes.root} ref={scrollContainer}>\n            {chipData.map((data) => {\n              let icon;\n\n              if (data.label === 'React') {\n                icon = <FaceIcon/>;\n              }\n\n              return (\n                <span key={data.key}>\n            <Chip\n              icon={icon}\n              label={data.label}\n              onDelete={data.label === 'React' ? undefined : handleDelete(data)}\n              className={classes.chip}\n            />\n          </span>\n              );\n            })}\n          </ul>\n        )}\n        {chipData.length === 0 && (\n          <div className={clsx(classes.root, 'empty')}>\n            Offered to all eligible people\n          </div>\n        )}\n        {checked && <Paper elevation={0}><Form/></Paper>}\n        <div className={classes.buttons}>\n          <Button variant=\"contained\" color=\"default\">\n            Abbrechen\n          </Button>\n          <Button variant=\"contained\" color=\"primary\">\n            Anwenden\n          </Button>\n        </div>\n      </Paper>\n    </>\n  )\n}\n\nexport default AddUser;","import CssBaseline from '@material-ui/core/CssBaseline';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport AddUser from \"./add-user\";\nimport jss from 'jss'\nimport preset from 'jss-preset-default'\n\njss.setup(preset())\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '24px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline/>\n      <Container maxWidth=\"lg\">\n        <div className={classes.root}>\n          <Grid container spacing={3}>\n            <Grid item xs={6}>\n              <AddUser />\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}